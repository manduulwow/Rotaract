import React, { useState, useEffect } from 'react';
import Container from '@material-ui/core/Container';
import axios from 'axios';
import { Link } from 'react-router-dom';
import EditButton from './function/MaterialDesignEdit';
import { makeStyles } from '@material-ui/core/styles';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import StarIcon from '@material-ui/icons/Star';
import Divider from '@material-ui/core/Divider';
import { Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';
import { useSelector, useDispatch } from 'react-redux';

const useStyles = makeStyles(theme => ({
    root: {
        width: '100%',
        maxWidth: 360,
        backgroundColor: theme.palette.background.paper,
    },
}));

const headers = {
    "Accept": "application/json"
}

const Members = (props) => {
    const classes = useStyles();

    const dispatch = useDispatch()
    const isLogged = useSelector(state => state.isLogged)
    const [member, setMember] = useState({});
    const [types, setTypes] = useState([]);
    const memberId = (props.location.state) ? props.location.state.memberId : null
    const [userClubId, setUserClubId] = useState(null);
    const memberType = {
        1: 'President',
        2: 'Vice President',
        3: 'Secretary',
        4: 'Treasurer',
        5: 'Sergeant at Arms',
        6: 'Board Member',
        7: 'Member',
        8: 'Supporting Member',
        9: 'Immediate Past President'
    }
    fetch('/api/checkToken').then(res => {
        if (res.status === 200)
            dispatch({ type: 'SIGNIN' })
        return res.text()
    }).then(res => { setUserClubId(res) })

    useEffect(() => {
        scroll.scrollToTop();
        axios.post('/api/memberData', {
            headers: headers,
            memberId: memberId
        })
            .then(res => {
                setMember(res.data.data[0])
                setTypes(res.data.types)
            }).catch(error => {
                console.log(error)
            });
    }, []);

    if (types.length > 0) {
        types.sort((a, b) => a.end_date - b.end_date)
    }

    const editButton =
        <div id="profile-edit-button">
            <span>Edit profile</span>
        </div>

    return (
        <div>
            <Container fixed>
                <div id="profileinfo-container-new">
                    <div id="profile-left">
                        <div className="profile-img-container">
                            <div id="profile-image-circle">
                                <img src={(typeof member.image_id == "undefined" || member.image_id == 0) ? require('../../img/club-member-img/default.jpg') : window.location.origin + "/api/getImage?imageId=" + member.image_id}></img>
                            </div>
                        </div>
                        <div id="member-profile-title">
                            <span className="profile-name">{member.first_name + " " + member.last_name}</span>
                            <div className="profile-tag">{(types[0]) ? memberType[types[0].member_type_id] : ''} - {(member.member_id) ? member.member_id : ''}</div>
                            <div className="profile-divider"></div>
                            <div>
                                <Link to={{
                                    pathname: "/editMemberInfo", state: {
                                        member: member,
                                        types: types,
                                        club_id: props.location.state.club_id
                                    }
                                }}>
                                    {(isLogged && props.location.state.club_id == userClubId) ? editButton : ""}
                                </Link>
                            </div>
                        </div>
                        <div id="left-img">
                            <svg width="229" height="100" viewBox="0 0 229 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g clip-path="url(#clip0)">
                                    <path opacity="0.4" d="M7.56129 37.7263C10.2297 37.7263 12.3929 35.5608 12.3929 32.8896C12.3929 30.2184 10.2297 28.053 7.56129 28.053C4.8929 28.053 2.72974 30.2184 2.72974 32.8896C2.72974 35.5608 4.8929 37.7263 7.56129 37.7263Z" fill="#EF328D" />
                                    <path opacity="0.4" d="M159.611 39.1392C163.415 39.1392 166.499 36.0523 166.499 32.2444C166.499 28.4365 163.415 25.3496 159.611 25.3496C155.808 25.3496 152.724 28.4365 152.724 32.2444C152.724 36.0523 155.808 39.1392 159.611 39.1392Z" fill="#EF328D" />
                                    <path opacity="0.4" d="M146.864 40.3741C149.533 40.3741 151.696 38.2086 151.696 35.5374C151.696 32.8662 149.533 30.7008 146.864 30.7008C144.196 30.7008 142.033 32.8662 142.033 35.5374C142.033 38.2086 144.196 40.3741 146.864 40.3741Z" fill="#EF328D" />
                                    <path d="M75.7382 66.5081H8.95215V99.8259H75.7382V66.5081Z" fill="#3F3D56" />
                                    <path d="M222.976 66.7286H156.19V99.8258H222.976V66.7286Z" fill="#3F3D56" />
                                    <path d="M149.357 66.7286H82.5713V99.8258H149.357V66.7286Z" fill="#3F3D56" />
                                    <path d="M75.7382 32.9695H8.95215V67.3906H75.7382V32.9695Z" fill="#F2F2F2" />
                                    <path d="M149.357 32.9695H82.5713V67.3906H149.357V32.9695Z" fill="#F2F2F2" />
                                    <path d="M222.976 32.9695H156.19V67.3906H222.976V32.9695Z" fill="#F2F2F2" />
                                    <path d="M189.148 41.2592L188.801 41.2864L190.541 63.5836L190.888 63.5564L189.148 41.2592Z" fill="#3F3D56" />
                                    <path d="M197.849 55.0343C197.849 61.7688 192.455 67.9249 192.455 67.9249C191.096 64.0023 190.39 59.8828 190.366 55.7311C190.366 48.9967 191.301 43.5374 192.455 43.5374C193.608 43.5374 197.849 48.2999 197.849 55.0343Z" fill="#3F3D56" />
                                    <path d="M182.555 58.0925C185.136 64.3114 192.478 67.9242 192.478 67.9242C192.229 63.7799 191.302 59.7047 189.732 55.8618C187.151 49.6428 184.195 44.9605 183.13 45.4035C182.065 45.8465 179.974 51.8736 182.555 58.0925Z" fill="#3F3D56" />
                                    <path d="M188.974 43.5374C190.224 43.5374 191.237 42.5235 191.237 41.2729C191.237 40.0222 190.224 39.0083 188.974 39.0083C187.725 39.0083 186.712 40.0222 186.712 41.2729C186.712 42.5235 187.725 43.5374 188.974 43.5374Z" fill="#3F3D56" />
                                    <path d="M189.844 40.9244C190.421 40.9244 190.888 40.4564 190.888 39.8792C190.888 39.3019 190.421 38.834 189.844 38.834C189.268 38.834 188.8 39.3019 188.8 39.8792C188.8 40.4564 189.268 40.9244 189.844 40.9244Z" fill="#EF328D" />
                                    <path d="M59.3226 2.42513L58.9756 2.45227L60.7157 24.7494L61.0627 24.7223L59.3226 2.42513Z" fill="#3F3D56" />
                                    <path d="M68.0238 16.2002C68.0238 22.9347 62.6294 29.0908 62.6294 29.0908C61.2704 25.1682 60.5649 21.0487 60.5413 16.897C60.5413 10.1626 61.4762 4.70325 62.6294 4.70325C63.7827 4.70325 68.0238 9.46579 68.0238 16.2002Z" fill="#3F3D56" />
                                    <path d="M52.7301 19.2585C55.3115 25.4774 62.6528 29.0902 62.6528 29.0902C62.4042 24.9459 61.4766 20.8707 59.907 17.0278C57.3256 10.8089 54.3697 6.12655 53.3047 6.56954C52.2397 7.01253 50.1487 13.0396 52.7301 19.2585Z" fill="#3F3D56" />
                                    <path d="M59.1491 4.70331C60.3985 4.70331 61.4113 3.68943 61.4113 2.43875C61.4113 1.18807 60.3985 0.174194 59.1491 0.174194C57.8998 0.174194 56.887 1.18807 56.887 2.43875C56.887 3.68943 57.8998 4.70331 59.1491 4.70331Z" fill="#3F3D56" />
                                    <path d="M60.0192 2.09036C60.5958 2.09036 61.0632 1.62242 61.0632 1.04518C61.0632 0.467943 60.5958 0 60.0192 0C59.4425 0 58.9751 0.467943 58.9751 1.04518C58.9751 1.62242 59.4425 2.09036 60.0192 2.09036Z" fill="#EF328D" />
                                    <path d="M107.692 42.8454L107.357 42.9399L113.417 64.4667L113.752 64.3722L107.692 42.8454Z" fill="#3F3D56" />
                                    <path d="M118.915 54.6526C120.229 61.2571 116.141 68.3499 116.141 68.3499C114.042 64.7689 112.546 60.8668 111.712 56.7998C110.398 50.1952 110.249 44.6583 111.38 44.4326C112.511 44.207 117.6 48.048 118.915 54.6526Z" fill="#3F3D56" />
                                    <path d="M104.513 60.6438C108.259 66.2378 116.164 68.3447 116.164 68.3447C115.111 64.329 113.405 60.5138 111.116 57.052C107.37 51.458 103.557 47.4443 102.599 48.0871C101.641 48.7299 100.767 55.0499 104.513 60.6438Z" fill="#3F3D56" />
                                    <path d="M107.525 45.1572C108.774 45.1572 109.787 44.1433 109.787 42.8926C109.787 41.6419 108.774 40.6281 107.525 40.6281C106.275 40.6281 105.262 41.6419 105.262 42.8926C105.262 44.1433 106.275 45.1572 107.525 45.1572Z" fill="#3F3D56" />
                                    <path d="M108.106 42.4009C108.682 42.4009 109.15 41.933 109.15 41.3557C109.15 40.7785 108.682 40.3105 108.106 40.3105C107.529 40.3105 107.062 40.7785 107.062 41.3557C107.062 41.933 107.529 42.4009 108.106 42.4009Z" fill="#EF328D" />
                                    <path d="M127.07 43.3915L117.312 63.5109L117.625 63.663L127.383 43.5437L127.07 43.3915Z" fill="#3F3D56" />
                                    <path d="M127.935 59.8323C124.534 65.643 116.771 68.225 116.771 68.225C117.579 64.1529 119.051 60.2414 121.127 56.6472C124.527 50.8365 128.091 46.5991 129.086 47.1826C130.081 47.7662 131.335 54.0216 127.935 59.8323Z" fill="#3F3D56" />
                                    <path d="M113.194 54.732C112.281 61.4042 116.791 68.2362 116.791 68.2362C118.669 64.5345 119.927 60.5489 120.513 56.4389C121.426 49.7667 121.24 44.2309 120.097 44.0742C118.955 43.9176 114.107 48.0599 113.194 54.732Z" fill="#3F3D56" />
                                    <path d="M127.226 45.7322C128.476 45.7322 129.488 44.7184 129.488 43.4677C129.488 42.217 128.476 41.2031 127.226 41.2031C125.977 41.2031 124.964 42.217 124.964 43.4677C124.964 44.7184 125.977 45.7322 127.226 45.7322Z" fill="#3F3D56" />
                                    <path d="M128.681 43.7506C129.257 43.7506 129.725 43.2827 129.725 42.7055C129.725 42.1282 129.257 41.6603 128.681 41.6603C128.104 41.6603 127.636 42.1282 127.636 42.7055C127.636 43.2827 128.104 43.7506 128.681 43.7506Z" fill="#EF328D" />
                                    <path d="M64.4031 30.5102C64.4031 30.5102 62.6113 25.4281 61.3173 27.0225C60.0232 28.6169 63.3081 31.3074 63.3081 31.3074L64.4031 30.5102Z" fill="#A0616A" />
                                    <path d="M72.8642 25.5278L71.7864 25.9277C71.7864 25.9277 71.2716 28.2183 71.4707 28.6169C71.6697 29.0155 71.7693 28.7166 71.4707 29.5137C71.172 30.3109 70.2761 32.4035 70.1766 32.7025C70.077 33.0014 64.4031 30.8092 64.4031 29.713C64.4031 29.713 63.2086 31.1081 62.6113 31.407C62.6113 31.407 69.1812 36.1901 70.077 36.788C70.9729 37.3859 71.4706 37.087 72.267 36.3894C73.0633 35.6919 76.4478 29.9123 76.4478 29.9123L72.8642 25.5278Z" fill="#575A89" />
                                    <path d="M69.9774 60.9027C69.9774 60.9027 70.0769 61.9989 70.276 62.0985C70.4751 62.1981 71.9683 64.6894 70.276 65.1876C68.5838 65.6858 67.5884 65.4865 67.1902 65.6858C66.792 65.8851 59.824 66.2837 59.7245 65.1876C59.625 64.0915 63.109 63.8921 63.109 63.8921C63.109 63.8921 66.2943 61.7996 66.792 60.7034C67.2898 59.6073 69.9774 60.9027 69.9774 60.9027Z" fill="#2F2E41" />
                                    <path d="M90.1845 62.8956C90.1845 62.8956 92.5735 66.9812 91.9763 67.4794C91.379 67.9777 85.5624 69.7934 84.7096 69.871C83.6147 69.9706 82.8183 69.0738 83.7142 68.5756C84.6101 68.0773 86.5014 65.9847 86.5014 65.2872V63.4935L90.1845 62.8956Z" fill="#2F2E41" />
                                    <path d="M92.4741 36.1901C92.4741 36.1901 94.5645 38.7809 91.2796 42.9661L85.8048 49.9414C85.8048 49.9414 89.1892 55.3224 89.2888 58.1125C89.3883 60.9027 90.0851 60.3048 90.2842 61.5006C90.4833 62.6963 91.3792 62.0985 90.6824 62.9953C89.9856 63.8921 87.3975 64.6893 86.6011 63.9918C86.3272 63.7409 86.1133 63.4315 85.9754 63.0864C85.8375 62.7413 85.7792 62.3696 85.8048 61.9988C85.8048 61.6002 84.4112 59.3083 84.3116 58.6108C84.2121 57.9132 80.529 52.2333 80.529 52.2333C80.529 52.2333 79.3345 48.8453 80.7281 46.952C82.1217 45.0587 83.0426 42.3735 83.0426 42.3735C83.0426 42.3735 78.9363 47.3506 76.0496 48.5464C76.0496 48.5464 74.9546 48.7457 75.1537 49.2439C75.3528 49.7421 75.1537 50.0411 74.8551 50.5393C74.5564 51.0376 72.466 56.8171 71.7692 58.3118C71.0724 59.8066 71.3711 60.7034 70.5747 61.2016C69.7784 61.6999 66.1948 61.3013 66.1948 60.803C66.1948 60.3048 66.6925 59.0094 66.9912 58.3118C67.2898 57.6143 69.6788 49.5429 69.4797 48.1478C69.2807 46.7527 69.5793 44.8594 71.0724 44.0622C72.5656 43.2651 80.1308 36.788 80.529 36.788C80.9272 36.788 92.4741 36.1901 92.4741 36.1901Z" fill="#2F2E41" />
                                    <path d="M72.466 20.5455C74.775 20.5455 76.6468 18.6717 76.6468 16.3602C76.6468 14.0488 74.775 12.175 72.466 12.175C70.157 12.175 68.2852 14.0488 68.2852 16.3602C68.2852 18.6717 70.157 20.5455 72.466 20.5455Z" fill="#A0616A" />
                                    <path d="M75.8503 16.7588C75.8503 16.7588 77.1444 19.0507 78.7371 19.3496C80.3297 19.6486 74.5562 24.2324 74.5562 24.2324C74.5562 24.2324 73.1626 19.8479 71.9681 19.6486C70.7736 19.4493 75.8503 16.7588 75.8503 16.7588Z" fill="#A0616A" />
                                    <path d="M71.769 26.1257C71.769 27.4211 75.6512 31.1081 75.6512 31.1081L79.3343 34.1972C79.3343 34.1972 79.4339 35.2933 79.832 35.3929C80.2302 35.4926 80.7279 35.4926 80.3297 36.0905C79.9316 36.6884 78.9361 37.9838 79.832 38.1831C80.1021 38.2242 80.3743 38.2501 80.6473 38.2608C80.8862 38.2748 81.1669 38.2877 81.4825 38.2997C82.2191 38.3256 83.1408 38.3425 84.1392 38.3355C84.4229 38.3345 84.7116 38.3312 85.0053 38.3256C88.769 38.2508 93.129 37.8174 92.7726 36.3894C92.1753 33.9979 92.5735 33.2007 91.2795 31.9053C89.9854 30.6099 87.895 26.1257 87.895 26.1257C87.895 26.1257 83.7142 19.0507 80.2302 19.0507L79.5065 18.8604C79.1703 18.7717 78.8146 18.7912 78.49 18.916C78.1654 19.0408 77.8883 19.2647 77.6978 19.5559C76.999 20.6212 75.8971 22.2215 75.253 22.7377C74.2576 23.5349 74.1023 22.9629 74.1023 22.9629C74.1023 22.9629 71.769 24.8303 71.769 26.1257Z" fill="#575A89" />
                                    <path d="M80.6285 41.2721C80.6285 41.2721 77.7418 45.7562 79.5336 46.5534C81.3253 47.3506 82.3208 41.87 82.3208 41.87L80.6285 41.2721Z" fill="#A0616A" />
                                    <path d="M75.199 15.8874C75.0386 15.8672 74.9878 15.6645 74.9608 15.5049C74.8162 14.6501 74.1798 13.8395 73.3248 13.7015C72.998 13.658 72.6657 13.6848 72.3501 13.7801C71.8979 13.9043 71.4734 14.1135 71.0993 14.3964C70.9163 14.5639 70.7046 14.697 70.4743 14.7893C70.3174 14.8354 69.6513 15.1319 69.4957 15.182C69.1535 15.2923 68.8703 15.6508 68.5179 15.5798C68.1808 15.5119 68.0527 15.1044 67.9985 14.7644C67.8751 13.9898 68.3179 12.8342 68.7583 12.1854C69.0924 11.6931 69.6578 11.4097 70.2232 11.2254C70.8855 11.0241 71.566 10.8888 72.2549 10.8213C73.1848 10.7113 74.148 10.653 75.0392 10.9407C75.9304 11.2285 76.7419 11.9324 76.9082 12.8549C76.9429 13.047 76.9494 13.2438 76.9918 13.4344C77.0955 13.8993 77.4027 14.2901 77.582 14.7314C77.7113 15.0554 77.7714 15.403 77.7582 15.7518C77.7451 16.1005 77.6592 16.4426 77.5059 16.756C77.2577 17.2557 76.826 17.7359 76.9192 18.2861L76.151 17.6798C76.04 17.6166 75.954 17.5173 75.9073 17.3983C75.8607 17.2794 75.8562 17.148 75.8946 17.0261L76.0063 16.0632C76.0449 15.8888 76.0275 15.7066 75.9565 15.5427C75.615 14.9456 75.4665 15.9212 75.199 15.8874Z" fill="#2F2E41" />
                                    <path opacity="0.1" d="M82.4202 34.3964L81.4825 38.2996C82.4282 38.3335 83.6794 38.3514 85.0053 38.3255C85.3398 37.321 85.6593 36.2737 85.9042 35.2932C86.8001 31.7059 85.3069 26.2253 84.5106 23.6344C83.7143 21.0436 81.7234 20.3461 81.7234 20.3461C80.9072 20.6334 80.1363 21.0361 79.4339 21.5418C78.1399 22.4387 82.4202 34.3964 82.4202 34.3964Z" fill="black" />
                                    <path opacity="0.1" d="M81.6239 34.1971L80.6473 38.2607C80.8863 38.2746 81.167 38.2876 81.4825 38.2996C82.2191 38.3255 83.1409 38.3424 84.1393 38.3354C84.4987 37.2682 84.8461 36.1422 85.1079 35.0939C86.0038 31.5066 84.5106 26.026 83.7143 23.4351C82.9179 20.8443 81.1759 23.6842 81.1759 23.6842C81.1759 23.6842 81.8727 21.9902 80.5787 22.887C79.2846 23.7839 81.6239 34.1971 81.6239 34.1971Z" fill="black" />
                                    <path d="M81.3252 20.1467C81.3252 20.1467 83.3161 20.8443 84.1124 23.4351C84.9088 26.0259 86.4019 31.5066 85.506 35.0939C84.6101 38.6812 82.7188 43.1653 82.7188 43.1653C82.7188 43.1653 80.8275 41.7703 80.1307 42.0692L82.022 34.1971C82.022 34.1971 77.7417 22.2393 79.0357 21.3425C79.7381 20.8367 80.509 20.4341 81.3252 20.1467Z" fill="#575A89" />
                                    <path d="M72.8827 67.9778C70.0166 67.4917 67.2602 67.0743 64.6136 66.7255L65.6598 64.6948C65.307 64.5721 63.757 65.735 63.757 65.735L65.1301 59.8404C63.3557 60.0546 62.4535 66.0734 62.4535 66.0734L60.4711 64.0385L61.4308 66.3263C54.4686 65.4837 47.4637 65.0424 40.4508 65.0045L41.3463 63.2664C40.9935 63.1438 39.4435 64.3067 39.4435 64.3067L40.8166 58.412C39.0422 58.6262 38.14 64.645 38.14 64.645L36.1576 62.6101L37.1741 65.0333C33.1426 65.0999 29.1171 65.3736 25.1136 65.8533C26.0193 63.1457 29.0963 60.5706 29.0963 60.5706C26.7464 61.2702 25.5138 62.4426 24.8697 63.5355C24.8122 57.9488 25.7402 52.3958 27.611 47.132C27.611 47.132 22.7539 57.7124 23.3737 64.8145L23.4478 66.0756C19.3301 66.6658 17.7102 68.0525 17.7102 68.0525L72.8827 67.9778Z" fill="#3F3D56" />
                                    <path d="M220.121 69.7431C217.255 69.257 214.498 68.8396 211.852 68.4907L212.898 66.46C212.545 66.3374 210.995 67.5003 210.995 67.5003L212.368 61.6056C210.594 61.8198 209.692 67.8387 209.692 67.8387L207.709 65.8037L208.669 68.0915C201.707 67.249 194.702 66.8076 187.689 66.7697L188.584 65.0317C188.232 64.909 186.682 66.0719 186.682 66.0719L188.055 60.1773C186.28 60.3915 185.378 66.4103 185.378 66.4103L183.396 64.3754L184.412 66.7985C180.381 66.8652 176.355 67.1389 172.352 67.6186C173.257 64.911 176.334 62.3358 176.334 62.3358C173.984 63.0355 172.752 64.2078 172.108 65.3008C172.05 59.7141 172.978 54.161 174.849 48.8972C174.849 48.8972 169.992 59.4777 170.612 66.5797L170.686 67.8408C166.568 68.4311 164.948 69.8178 164.948 69.8178L220.121 69.7431Z" fill="#3F3D56" />
                                    <path d="M228.571 99.5587H0V100H228.571V99.5587Z" fill="#2F2E41" />
                                </g>
                                <defs>
                                    <clipPath id="clip0">
                                        <rect width="228.571" height="100" fill="white" />
                                    </clipPath>
                                </defs>
                            </svg>
                        </div>
                    </div>
                    <div id="profile-right">
                        <div id="member-field-container">
                            <div id="member-info-field">
                                {
                                    types.map((e,index) => (
                                        <div className="member-list-item" key={index}>
                                            <div className="member-list-item-wrap">
                                                <div className="member-list-item-dot"></div>
                                                <div className="member-list-item-mtype">{memberType[e.member_type_id]}</div>
                                                <div className="member-list-item-date">{e.started_date.substring(0, 10).replace('-','.').replace('-','.') + ' - ' + e.end_date.substring(0, 10).replace('-','.').replace('-','.')}</div>
                                            </div>
                                        </div>
                                    ))
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </Container>
        </div>
    );
};

export default Members